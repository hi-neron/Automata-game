'use strict'

const http = require('http')
const chalk = require('chalk')
const port = process.env.GAME_PORT || 9051
const server = http.createServer()

server.listen(port) // comment this to test

var io = require('socket.io')(server)
require('../server')(io)

server.on('listening', () => {
  console.log(chalk.black.bgGreen(`Automata game-layer running on ${port} port`))
})

server.on('error', onError)

function onError (error) {
  if (error.syscall !== 'listen') {
    throw error
  }

  var bind = typeof port === 'string'
    ? 'Pipe ' + port
    : 'Port ' + port

  // handle specific listen errors with friendly messages
  switch (error.code) {
    case 'EACCES':
      console.error(bind + ' requires elevated privileges')
      process.exit(1)
      break
    case 'EADDRINUSE':
      console.error(bind + ' is already in use')
      process.exit(1)
      break
    default:
      throw error
  }
}

/*
// Un-comment this to test
function test () {
  server.listen(port)
  return Promise.resolve(server)
}

exports.test = test
*/